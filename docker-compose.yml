
services:
  db:
    image: pgvector/pgvector:pg17
    restart: always
    environment:
      POSTGRES_DB: vector_database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  database:
    build:
      context: ./database
      dockerfile: dockerfile
    container_name: database
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./database/init.json:/database/init.json
    environment:
      POSTGRES_DB: vector_database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      EMBEDDING_MODEL_NAME: ${EMBEDDING_MODEL_NAME}

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: backend
    depends_on:
      - db
    env_file:
      - .env
    environment:
      LLM_API_KEY: ${LLM_API_KEY}
      POSTGRES_DB: vector_database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      EMBEDDING_MODEL_NAME: ${EMBEDDING_MODEL_NAME}
      LLM_NAME: ${LLM_NAME}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    ports:
      - "8080:8080"
    command: ["python", "app.py"]

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    container_name: frontend
    env_file:
      - .env
    ports:
      - "8501:8501"
    depends_on:
      - backend

volumes:
  pg_data: